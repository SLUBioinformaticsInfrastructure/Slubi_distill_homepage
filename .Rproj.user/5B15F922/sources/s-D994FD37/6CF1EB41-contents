
# base R
#Read in file
ds <- read.table("/Users/amrei/Documents/projects/leila_heatmap/leila_data.txt", header= TRUE , sep = "\t")
str(ds)

#Assign rowname
row.names(ds)<-ds$X
ds <- as.matrix(ds[, -1])

# heatmap without dendrogram
heatmap(ds,Colv=NA,Rowv = NA)

#heatmap with dendrogram
heatmap(ds)


# using ggplot2

# your data
ds <- read.table("/Users/amrei/Documents/projects/leila_heatmap/leila_data.txt", header= TRUE , sep = "\t")
str(ds)
row.names(ds)<-ds$X
ds <- ds[, -1]


# Library
library(ggplot2)
library(tidyverse)

# transform data
ds2 <- ds %>%
  rownames_to_column() %>%
  gather(colname, value, -rowname)
head(ds2)
# here you can adjust the names as they will appear in the plot
# names(ds2) <- c("cluster", "sample", "lpm")

# Plot using ggplot
ggplot(ds2, aes(x = rowname, y = colname, fill = value)) +
  geom_tile()


# problem now is that the high values mask the low ones: try normalization
# normalized data
ds3 <- ds2

# normalize min-max data (X – min(X))/(max(X) – min(X))
ds3$value <- (ds3$value - min(ds3$value))/(max(ds3$value) - min(ds3$value))

# Plot using ggplot
ggplot(ds3, aes(x = rowname, y = colname, fill = value)) +
  geom_tile()

# same problem - instead of normalization, transform the data with log:
ds3$value <- log(ds2$value)

# Plot using ggplot
ggplot(ds3, aes(x = rowname, y = colname, fill = value)) +
  geom_tile()
